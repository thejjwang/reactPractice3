{"ast":null,"code":"var _jsxFileName = \"/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\n\n// Build a todo list component. It should have an input field for adding new tasks,\n// a button to add the task to a list, and a display area to show the list of tasks. \n// Use useState to manage the list of tasks.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputTasks, setInputTasks] = useState('');\n  const handleAddTask = () => {\n    if (inputTasks != \"\") {\n      setTasks([...tasks, inputTasks]);\n    }\n  };\n  const handleTaskChange = event => {\n    setInputTasks(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter a task\",\n      value: inputTasks,\n      onChange: handleTaskChange,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task\n      }, tasks.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDoList, \"oS6SG+MH2hwk2Z+BgqTItvNarYQ=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","tasks","setTasks","inputTasks","setInputTasks","handleAddTask","handleTaskChange","event","target","value","children","placeholder","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","_c","$RefreshReg$"],"sources":["/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n// Build a todo list component. It should have an input field for adding new tasks,\n// a button to add the task to a list, and a display area to show the list of tasks. \n// Use useState to manage the list of tasks.\n\nconst ToDoList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [inputTasks, setInputTasks] = useState('');\n\n    const handleAddTask = () => {\n        if (inputTasks != \"\"){\n            setTasks([...tasks, inputTasks]);\n        }\n    }\n    const handleTaskChange = (event) => {\n        setInputTasks(event.target.value);\n    };\n\n    return (\n        <>\n            <input placeholder=\"enter a task\" value={inputTasks} onChange={handleTaskChange} type=\"text\"></input>\n            <button>Add Task</button>\n            <ul>\n                {tasks.map((task, index) => <li key={tasks.index}>{task}</li>)}\n            </ul>\n        </>\n    )\n}\n\nexport default ToDoList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIF,UAAU,IAAI,EAAE,EAAC;MACjBD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,UAAU,CAAC,CAAC;IACpC;EACJ,CAAC;EACD,MAAMG,gBAAgB,GAAIC,KAAK,IAAK;IAChCH,aAAa,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAOe,WAAW,EAAC,cAAc;MAACF,KAAK,EAAEN,UAAW;MAACS,QAAQ,EAAEN,gBAAiB;MAACO,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrGrB,OAAA;MAAAc,QAAA,EAAQ;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzBrB,OAAA;MAAAc,QAAA,EACKT,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKxB,OAAA;QAAAc,QAAA,EAAuBS;MAAI,GAAlBlB,KAAK,CAACmB,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA,eACP,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAtBKD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}