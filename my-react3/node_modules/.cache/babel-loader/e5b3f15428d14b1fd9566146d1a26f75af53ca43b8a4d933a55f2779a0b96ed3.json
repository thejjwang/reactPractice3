{"ast":null,"code":"var _jsxFileName = \"/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/RandomQuote.js\",\n  _s = $RefreshSig$();\n// Build a component that fetches and displays a random quote from an API. \n// Use useEffect to fetch the data and update the component's state. \n// Display the quote on the screen.\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomQuote = () => {\n  _s();\n  const [randomQuote, setRandomQuote] = useEffect(() => {\n    const fetchJokes = async () => {\n      try {\n        const response = await fetch(\"https://api.chucknorris.io/jokes/random\");\n        const data = await response.json();\n        const quote = data.value;\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"The random quote is: \", quote]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n_s(RandomQuote, \"66YRNBfpnblvgPV8Z7eZw2RXTDc=\");\n_c = RandomQuote;\nexport default RandomQuote;\nvar _c;\n$RefreshReg$(_c, \"RandomQuote\");","map":{"version":3,"names":["useEffect","React","jsxDEV","_jsxDEV","RandomQuote","_s","randomQuote","setRandomQuote","fetchJokes","response","fetch","data","json","quote","value","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/RandomQuote.js"],"sourcesContent":["// Build a component that fetches and displays a random quote from an API. \n// Use useEffect to fetch the data and update the component's state. \n// Display the quote on the screen.\nimport { useEffect } from \"react\";\nimport React from \"react\";\n\nconst RandomQuote = () => {\n    const [randomQuote, setRandomQuote] =\n    useEffect(() => {\n        const fetchJokes = async () => {\n            try { \n                const response = await fetch(\"https://api.chucknorris.io/jokes/random\");\n                const data = await response.json();\n                const quote = data.value;\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    });\n    \n    return <p>The random quote is: {quote}</p>\n\n}\n\nexport default RandomQuote;"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GACnCP,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;EACL,CAAC,CAAC;EAEF,oBAAOZ,OAAA;IAAAc,QAAA,GAAG,uBAAqB,EAACJ,KAAK;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE9C,CAAC;AAAAhB,EAAA,CAhBKD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAkBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}