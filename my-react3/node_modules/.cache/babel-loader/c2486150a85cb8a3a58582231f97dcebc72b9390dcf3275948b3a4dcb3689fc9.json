{"ast":null,"code":"var _jsxFileName = \"/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputTasks, setInputTasks] = useState('');\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/tasks');\n        const data = await response.json();\n        console.log(data);\n        const newTasks = data;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  const handleAddTask = () => {\n    if (inputTasks !== \"\") {\n      setTasks([...tasks, inputTasks]);\n    }\n  };\n  const handleTaskChange = event => {\n    setInputTasks(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"enter a task\",\n      value: inputTasks,\n      onChange: handleTaskChange,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDoList, \"lTrNIuFh9j8ZPNb0QsdEV8dHxUk=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","tasks","setTasks","inputTasks","setInputTasks","fetchTodos","response","fetch","data","json","console","log","newTasks","error","handleAddTask","handleTaskChange","event","target","value","children","placeholder","onChange","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","index","_c","$RefreshReg$"],"sources":["/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// \n\nconst ToDoList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [inputTasks, setInputTasks] = useState('');\n\n    useEffect(() => {\n        const fetchTodos = async () => {\n            try { \n                const response = await fetch('http://localhost:3000/tasks');\n                const data = await response.json();\n                console.log(data);\n                const newTasks = (data)\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchTodos();\n    }, []);\n\n    const handleAddTask = () => {\n        if (inputTasks !== \"\"){\n            setTasks([...tasks, inputTasks]);\n        }\n    }\n    const handleTaskChange = (event) => {\n        setInputTasks(event.target.value);\n    };\n\n    return (\n        <>\n            <input placeholder=\"enter a task\" value={inputTasks} onChange={handleTaskChange} type=\"text\"></input>\n            <button onClick={handleAddTask}>Add Task</button>\n            <ul>\n                {tasks.map((task, index) => <li key={index}>{task}</li>)}\n            </ul>\n        </>\n    )\n}\n\nexport default ToDoList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjB,MAAMI,QAAQ,GAAIJ,IAAK;MAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACtB;IACJ,CAAC;IACDR,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIX,UAAU,KAAK,EAAE,EAAC;MAClBD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEE,UAAU,CAAC,CAAC;IACpC;EACJ,CAAC;EACD,MAAMY,gBAAgB,GAAIC,KAAK,IAAK;IAChCZ,aAAa,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACItB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAOwB,WAAW,EAAC,cAAc;MAACF,KAAK,EAAEf,UAAW;MAACkB,QAAQ,EAAEN,gBAAiB;MAACO,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrG9B,OAAA;MAAQ+B,OAAO,EAAEb,aAAc;MAAAK,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjD9B,OAAA;MAAAuB,QAAA,EACKlB,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKlC,OAAA;QAAAuB,QAAA,EAAiBU;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA,eACP,CAAC;AAEX,CAAC;AAAA1B,EAAA,CApCKD,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}