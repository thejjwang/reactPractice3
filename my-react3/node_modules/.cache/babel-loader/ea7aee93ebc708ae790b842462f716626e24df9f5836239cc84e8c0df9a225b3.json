{"ast":null,"code":"var _jsxFileName = \"/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/tasks', {\n          method: 'GET'\n        });\n        const data = await response.json();\n        console.log(data);\n        setTasks(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    if (newTask.trim() !== \"\") {\n      try {\n        const response = await fetch(\"http://localhost:3000/tasks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            task: newTask\n          })\n        });\n        const data = await response.json();\n        setTasks([...tasks, data]);\n        setNewTask(\"\");\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n  const handleTaskChange = event => {\n    setNewTask(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a task\",\n        value: newTask,\n        onChange: handleTaskChange,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ToDoList, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","fetch","method","data","json","console","log","error","handleAddTask","trim","headers","body","JSON","stringify","task","handleTaskChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","onClick","map","index","id","_c","$RefreshReg$"],"sources":["/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ToDoList.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\n// \n\nconst ToDoList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try { \n                const response = await fetch('http://localhost:3000/tasks', {\n                    method: 'GET',\n                });\n                const data = await response.json();\n                console.log(data);\n                setTasks(data);\n                \n            } catch (error) {\n                console.log(error);\n            }\n        }\n        fetchTasks();\n    }, []);\n\n    const handleAddTask = async () => {\n        if (newTask.trim() !== \"\"){\n            try {\n                const response = await fetch(\"http://localhost:3000/tasks\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({ task: newTask }),\n                });\n                const data = await response.json();\n                setTasks([...tasks, data]);\n                setNewTask(\"\");\n              } catch (error) {\n                console.log(error);\n              }\n            }\n          };\n\n    const handleTaskChange = (event) => {\n        setNewTask(event.target.value);\n    };\n    \n\n    return (\n        <>  \n            <h1>Todo List</h1>\n            <div>\n                <input placeholder=\"Add a task\" value={newTask} onChange={handleTaskChange} type=\"text\"></input>\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n            <ul>\n                {tasks.map((task, index) => <li key={task.id}>{task}</li>)}\n            </ul>\n        </>\n    )\n}\n\nexport default ToDoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}