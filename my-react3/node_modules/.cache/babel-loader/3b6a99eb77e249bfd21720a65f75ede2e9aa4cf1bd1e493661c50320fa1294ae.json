{"ast":null,"code":"// 1. Create a functional component called ColorChanger.\n// 2. Declare a state variable `backgroundColor` using the `useState` hook. Initialize it with an initial color value.\n// 3. Create a function `changeColor` that will be called when the \"Change Color\" button is clicked: \n//    - Inside the function, generate a random color value.\n//    - Update the `backgroundColor` state with the new color value.\n// 4. Create a function `resetColor` that will be called when the \"Reset Color\" button is clicked:\n//    - Inside the function, reset the `backgroundColor` state to the initial color value.\n// 5. Render the user interface:\n//    - Display a div element with a style attribute:\n//      - Set the `backgroundColor` style property to the value of the `backgroundColor` state.\n//    - Display a button element with the text \"Change Color\":\n//      - Attach the `changeColor` function to the `onClick` event.\n//    - Display a button element with the text \"Reset Color\":\n//      - Attach the `resetColor` function to the `onClick` event.\n// 6. Export the `ColorChanger` component as the default export.\n\nimport { useState } from \"react\";\nimport React from \"react\";\nconst ColorChanger = () => {};\n_c = ColorChanger;\nvar _c;\n$RefreshReg$(_c, \"ColorChanger\");","map":{"version":3,"names":["useState","React","ColorChanger","_c","$RefreshReg$"],"sources":["/Users/jj/Desktop/Ahsan/practiceReact3/my-react3/src/ColorChanger.js"],"sourcesContent":["// 1. Create a functional component called ColorChanger.\n// 2. Declare a state variable `backgroundColor` using the `useState` hook. Initialize it with an initial color value.\n// 3. Create a function `changeColor` that will be called when the \"Change Color\" button is clicked: \n//    - Inside the function, generate a random color value.\n//    - Update the `backgroundColor` state with the new color value.\n// 4. Create a function `resetColor` that will be called when the \"Reset Color\" button is clicked:\n//    - Inside the function, reset the `backgroundColor` state to the initial color value.\n// 5. Render the user interface:\n//    - Display a div element with a style attribute:\n//      - Set the `backgroundColor` style property to the value of the `backgroundColor` state.\n//    - Display a button element with the text \"Change Color\":\n//      - Attach the `changeColor` function to the `onClick` event.\n//    - Display a button element with the text \"Reset Color\":\n//      - Attach the `resetColor` function to the `onClick` event.\n// 6. Export the `ColorChanger` component as the default export.\n\nimport { useState } from \"react\";\nimport React from \"react\";\n\nconst ColorChanger = () => {\n\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAE3B,CAAC;AAAAC,EAAA,GAFKD,YAAY;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}